swagger: '2.0'
info:
  title: Examples Examples
  version: '1.0'
  description: |-
    Examples of loads of examples, some right, some wrong.
  contact:
    name: Phil Sturgeon
    email: phil@stoplight.io
    url: https://stoplight.io
  license:
    name: MIT
host: example.org
schemes:
- http
consumes:
- application/json
produces:
- application/json
tags:
  - name: media-examples
    description: > 
      The sort of examples which show up in the [Responses
      Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#responseObject),
      which are `examples` with a mime type as a key.
  - name: schema-examples
    description: > 
      The sort of examples which show up for properties inside a [Schema
      Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#schemaObject).
paths:

  "/schema-example":
    get:
      operationId: schema-examples-inline
      description: when schema examples are inline (no $ref involved)
      tags: 
        - schema-examples
      responses:
        '200':
          description: 'Success, because the example matches the schema'
          schema:
            properties: 
              id:
                type: integer
              name:
                type: string
              completed: 
                type: boolean
              completed_at:
                type: string
                format: date-time
            required:
              - id
              - name
              - completed
            # notice how im in the schemq object, not next to it
            example:
              id: 1
              name: get food
              completed: false
              completed_at: '1955-04-23T13:22:52.685Z'
        '500':
          description: 'Fail, because the example is nonsense'
          schema:
            properties: 
              id:
                type: integer
              name:
                type: string
              completed: 
                type: boolean
              completed_at:
                type: string
                format: date-time
            required:
              - id
              - name
              - completed
            # notice how im in the schemq object, not next to it
            example:
              id: 1
              completed: Not a boolean
              completed_at: 'Not a date'
        '501':
          description: 'Fail, because the property example is nonsense'
          schema:
            properties: 
              some-bool:
                type: boolean
                example: not a bool
              some-date:
                type: string
                format: date-time
                example: not a date
              some-url:
                type: string
                format: url
                example: not a URL

  /param-examples:
    get:
      operationId: parameter-example
      description: when parameter examples are inline (no $ref involved)
      tags:
        - parameter-examples
      parameters:
        - name: single-example-good
          description: Valid to its schema
          in: query
          type: string
          enum: [foo, bar]
          x-example: foo
        
        - name: single-example-bad
          description: Not valid to its schema
          in: query
          type: string
          enum: [foo, bar]
          x-example: not "foo" or "bar" so this is bad

        # OAS2 does not have the schema keyword here, so no need to support that. 
        # OAS2 does not have multiple examples support for keywords, so no need to support that.

      responses:
        '200':
          description: 'ok'

  "/response-examples":
    get:
      operationId: response-examples-inline
      description: when examples are inline (no $ref involved)
      tags: 
        - media-examples
      responses:
        '200':
          description: 'Success, because the example matches the schema'
          schema:
            properties: 
              id:
                type: integer
              name:
                type: string
              completed: 
                type: boolean
              completed_at:
                type: string
                format: date-time
            required:
              - id
              - name
              - completed
          examples:
            application/json:
              id: 1
              name: get food
              completed: false
              completed_at: '1955-04-23T13:22:52.685Z'
        '500':
          description: 'Fail, because the example is nonsense'
          schema:
            properties: 
              id:
                type: integer
              name:
                type: string
              completed: 
                type: boolean
              completed_at:
                type: string
                format: date-time
            required:
              - id
              - name
              - completed
          examples:
            application/json:
              id: 1
              completed: Not a boolean
              completed_at: 'Not a date'
  
  "/response-examples-via-$ref":
    get:
      operationId: response-examples-via-$ref
      description: When the example is compared against a schema that ia a $ref to another file
      tags: 
        - media-examples
      responses:
        '200':
          description: 'Success, because the example matches the definition in a $ref'
          schema:
            "$ref": "./models/todo-full.v1.json"
          examples:
            application/json:
              id: 1
              name: get food
              completed: false
              completed_at: '1955-04-23T13:22:52.685Z'
              created_at: '1994-11-05T03:26:51.471Z'
              updated_at: '1989-07-29T11:30:06.701Z'
